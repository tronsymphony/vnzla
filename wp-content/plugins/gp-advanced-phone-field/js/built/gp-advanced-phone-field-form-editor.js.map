{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/src/form-editor.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","jQuery","fieldSettings","phone","bindEvents","togglePhoneFormatNotice","enabled","remove","$phoneFormat","$notice","GPAPF_EDITOR","strings","int_format_required","prop","insertAfter","field","phoneFormat","val","SetFieldPhoneFormat","on","SetFieldProperty","this","checked","document","event","form","gpapfEnable"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,kBClFrD,IAAMC,EAAIC,OAAOC,OAGjBF,GAAE,WACGC,OAAOE,cAAcN,eAAe,WACvCI,OAAOE,cAAcC,OAAS,0BAG/BC,OAGD,IAAMC,EAA0B,SAACC,G,QAChCL,OAAO,8BAA8BM,SAErC,IAAMC,EAAeP,OAAO,uBAE5B,GAAIK,EAAS,CACZ,IAAMG,EAAUR,OAAO,4WAG6E,QAH7E,EAGkDD,OAAOU,aAAaC,eAAO,eAAEC,qBAAmB,0CAIzHJ,EAAaK,KAAK,YAAY,GAC9BJ,EAAQK,YAAYN,GAGc,mBAAlB,QAAZ,EAAAR,OAAOe,aAAK,eAAEC,eACjBjB,EAAE,uBAAuBkB,IAAI,iBAC7BjB,OAAOkB,oBAAoB,uBAG5BV,EAAaK,KAAK,YAAY,IAI1BT,EAAa,WAClBL,EAAE,iBAAiBoB,GAAG,UAAU,WAC/BnB,OAAOoB,iBAAiB,cAAeC,KAAKC,SAC5CjB,EAAwBgB,KAAKC,YAG9BvB,EAAEwB,UAAUJ,GAAG,6BAA6B,SAASK,EAAOT,EAAOU,GAClE,IAAMnB,IAAYS,EAAMW,YAExB3B,EAAE,iBAAiBc,KAAK,UAAWP,GACnCD,EAAwBC","file":"gp-advanced-phone-field-form-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const $ = window.jQuery!;\n\n// Register field setting so Gravity Forms shows it in the sidebar.\n$(function() {\n\tif (window.fieldSettings.hasOwnProperty('phone')) {\n\t\twindow.fieldSettings.phone += ', .gpapf-field-setting';\n\t}\n\n\tbindEvents();\n});\n\nconst togglePhoneFormatNotice = (enabled: boolean) => {\n\tjQuery('#gpapf-phone-format-notice').remove();\n\n\tconst $phoneFormat = jQuery('#field_phone_format');\n\n\tif (enabled) {\n\t\tconst $notice = jQuery(`<div id=\"gpapf-phone-format-notice\" class=\"gform-accessibility-warning field_setting gform-alert gform-alert--accessibility gform-alert--inline\">\n\t\t\t\t\t<span class=\"gform-icon gform-icon--password gform-alert__icon\"></span>\n\t\t\t\t\t<div class=\"gform-alert__message-wrap\">\n\t\t\t\t\t\t<p class=\"gform-alert__message\" style=\"margin: 0;padding-top:2px;\">${window.GPAPF_EDITOR.strings?.int_format_required}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);\n\n\t\t$phoneFormat.prop('disabled', true);\n\t\t$notice.insertAfter($phoneFormat);\n\n\t\t// Change the format if it's not already international.\n\t\tif (window.field?.phoneFormat !== 'international') {\n\t\t\t$('#field_phone_format').val('international');\n\t\t\twindow.SetFieldPhoneFormat('international');\n\t\t}\n\t} else {\n\t\t$phoneFormat.prop('disabled', false);\n\t}\n};\n\nconst bindEvents = () => {\n\t$('#gpapf-enable').on('change', function(this: HTMLInputElement) {\n\t\twindow.SetFieldProperty('gpapfEnable', this.checked);\n\t\ttogglePhoneFormatNotice(this.checked);\n\t});\n\n\t$(document).on('gform_load_field_settings', function(event, field, form) {\n\t\tconst enabled = !!field.gpapfEnable;\n\n\t\t$('#gpapf-enable').prop('checked', enabled);\n\t\ttogglePhoneFormatNotice(enabled);\n\t});\n};\n\n// Make this a module to avoid TypeScript error with block-scoped variables since we're not importing anything\nexport {};\n"],"sourceRoot":""}